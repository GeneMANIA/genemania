<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jaxws="http://cxf.apache.org/jaxws"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.0.xsd
         http://www.springframework.org/schema/mvc
		 http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
		 http://www.springframework.org/schema/cache
		 http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!-- allow loading of configurations values from local property files -->
    <bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
        <property name="ignoreUnresolvablePlaceholders" value="false"/>
        <property name="ignoreResourceNotFound" value="true"/>
        <property name="order" value="1"/>
        <property name="locations">
            <list> <!-- later files in list override earlier. can use e.g. ${user.home} or  ${var:default} -->
                <value>/WEB-INF/classes/ApplicationConfig.properties</value>
                <!-- can also use e.g.:
                  <value>classpath:/WEB-INF/config.properties</value>
                  <value>file:config.properties</value>
                 -->
            </list>
        </property>
    </bean>

	<bean id="httpConverter"
        class="org.springframework.http.converter.json.MappingJacksonHttpMessageConverter">
    </bean>

	<!-- i18n -->

	<bean id="localeResolver"
		class="org.springframework.web.servlet.i18n.CookieLocaleResolver">
		<property name="defaultLocale" value="en" />
	</bean>

	<!-- email -->

	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
		<property name="host" value="smtp.gmail.com" />
		<property name="port" value="587" />
		<property name="username" value="genemania.mailer@gmail.com" />
		<property name="password" value="${emailPassword}" />
		<property name="javaMailProperties">
			<props>
				<!-- Use SMTP-AUTH to authenticate to SMTP server -->
				<prop key="mail.smtp.auth">true</prop>
				<!-- Use TLS to encrypt communication with SMTP server -->
				<prop key="mail.smtp.starttls.enable">true</prop>
			</props>
		</property>
	</bean>

	<bean id="mailMessage" class="org.springframework.mail.SimpleMailMessage">
		<property name="from">
			<value>genemania.mailer@gmail.com</value>
		</property>
		<property name="to">
			<value>${emailRecipient}</value>
		</property>
		<property name="subject">
			<value>Mail from GeneMANIA mailer</value>
		</property>
	</bean>

	<!-- Version definition -->

	<bean id="appVersion" class="java.lang.String">
		<constructor-arg>
			<value>${version}</value>
		</constructor-arg>
	</bean>

	<!-- Controller definitions -->

	<bean id="i18nController" class="org.genemania.controller.rest.I18nController">
		<property name="localeResolver" ref="localeResolver" />
	</bean>

	<!-- Service definitions -->
	
	<bean id="versionService" class="org.genemania.service.impl.VersionServiceImpl">
		<property name="appVersion" ref="appVersion" />
		<property name="statsService" ref="statsService" />
	</bean>

	<bean id="attributeService" class="org.genemania.service.impl.AttributeServiceImpl">
		<property name="attributeDao" ref="attributeDao" />
	</bean>
	
	<bean id="attributeGroupService" class="org.genemania.service.impl.AttributeGroupServiceImpl">
		<property name="attributeGroupDao" ref="attributeGroupDao" />
	</bean>

	<bean id="networkGroupService" class="org.genemania.service.impl.NetworkGroupServiceImpl">
		<property name="networkGroupDao" ref="networkGroupDao" />
		<property name="networkService" ref="networkService" />
	</bean>

	<bean id="geneService" class="org.genemania.service.impl.GeneServiceImpl">
		<property name="geneDao" ref="geneDao" />
		<property name="organismDao" ref="organismDao" />
	</bean>

	<bean id="organismService" class="org.genemania.service.impl.OrganismServiceImpl">
		<property name="organismDao" ref="organismDao" />
	</bean>

	<bean id="searchService" class="org.genemania.service.impl.SearchServiceImpl">
		<property name="engineConnector" ref="engineConnector" />
		<property name="geneDao" ref="geneDao" />
		<property name="attributeGroupService" ref="attributeGroupService" />
		<property name="networkGroupService" ref="networkGroupService" />
		<property name="networkService" ref="networkService" />
		<property name="attributeDao" ref="attributeDao" />
	</bean>

	<bean id="uploadNetworkService" class="org.genemania.service.impl.UploadNetworkServiceImpl">
		<property name="engineConnector" ref="engineConnector" />
		<property name="organismDao" ref="organismDao" />
		<property name="networkDao" ref="networkDao" />
		<property name="networkService" ref="networkService" />
	</bean>

	<bean id="statsService" class="org.genemania.service.impl.StatsServiceImpl">
		<property name="statsDao" ref="statsDao" />
	</bean>

	<bean id="networkService" class="org.genemania.service.impl.NetworkServiceImpl">
		<property name="organismDao" ref="organismDao" />
		<property name="networkDao" ref="networkDao" />
	</bean>

	<bean id="emailService" class="org.genemania.service.impl.EmailServiceImpl" init-method="init">
		<property name="mailSender" ref="mailSender" />
		<property name="mailMessage" ref="mailMessage" />
		<property name="statsService" ref="statsService" />
	</bean>


	<!-- DAO definitions -->

	<bean id="organismDao" class="org.genemania.dao.impl.LuceneOrganismDao" />
	<bean id="networkDao" class="org.genemania.dao.impl.LuceneNetworkDao" />
	<bean id="statsDao" class="org.genemania.dao.impl.LuceneStatsDao" />
	<bean id="networkGroupDao" class="org.genemania.dao.impl.LuceneNetworkGroupDao" />
	<bean id="nodeDao" class="org.genemania.dao.impl.LuceneNodeDao" />
	<bean id="geneDao" class="org.genemania.dao.impl.LuceneGeneDao" />
	<bean id="attributeGroupDao" class="org.genemania.dao.impl.LuceneAttributeGroupDao" />
	<bean id="attributeDao" class="org.genemania.dao.impl.LuceneAttributeDao" />

	<!-- JMS -->

	<bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="${brokerUrl}" />
    </bean>

    <bean id="pooledConnectionFactory" class="org.apache.activemq.pool.PooledConnectionFactory">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
    </bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
        <property name="connectionFactory" ref="pooledConnectionFactory" />
    </bean>

	<!-- old, separate worker config -->
	<!--
 	<bean id="engineConnector" class="org.genemania.connector.JmsEngineConnector">
		<property name="jmsTemplate" ref="jmsTemplate" />
        <property name="requestQueueName" value="${genemaniaMqRequests}" />
        <property name="responseQueueName" value="${genemaniaMqReplies}" />
		<property name="organismDao" ref="organismDao" />
		<property name="nodeDao" ref="nodeDao" />
		<property name="networkDao" ref="networkDao" />
        <property name="timeoutMillis" value="${engineTimeoutMillis}" />
        <property name="messageExpirationMillis" value="${messageExpirationMillis}" />
	</bean>
	-->
	
	<!-- new, integrated worker config -->
	<bean id="engineConnector" class="org.genemania.connector.SyncWorkerConnector">
		<property name="organismDao" ref="organismDao" />
		<property name="nodeDao" ref="nodeDao" />
		<property name="networkDao" ref="networkDao" />
	</bean>

	<!-- caching -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager" p:cache-manager-ref="ehcache"/>

	<!-- EhCache library setup -->
	<bean id="ehcache" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean" p:config-location="WEB-INF/ehcache.xml"/>
	
	<cache:annotation-driven cache-manager="cacheManager" />

	<!-- should be last -->
	<mvc:annotation-driven />
</beans>
